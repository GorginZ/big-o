[{"/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/SortBubble.jsx":"1","/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/Timer.jsx":"2","/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/BubbleSort.jsx":"3","/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/MergeSort.jsx":"4","/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/NavMenu.jsx":"5","/Users/georgia.leng/Desktop/ReactStuff/bigo/src/App.jsx":"6","/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/Graph.jsx":"7","/Users/georgia.leng/Desktop/ReactStuff/bigo/src/index.js":"8","/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/BigO.jsx":"9","/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/SortMerge.jsx":"10","/Users/georgia.leng/Desktop/ReactStuff/bigo/src/registerServiceWorker.js":"11","/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/DivideGraph.jsx":"12","/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/InsertionSort.jsx":"13","/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/SortInsertion.jsx":"14","/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/SelectionSort.jsx":"15","/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/SortSelection.jsx":"16","/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/Layout.jsx":"17","/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/BarElement.jsx":"18","/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/Colour.jsx":"19","/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/SortingAlgorithms.jsx":"20"},{"size":525,"mtime":1610169902352,"results":"21","hashOfConfig":"22"},{"size":1273,"mtime":1610169902353,"results":"23","hashOfConfig":"22"},{"size":1836,"mtime":1622012278331,"results":"24","hashOfConfig":"22"},{"size":1767,"mtime":1622012278333,"results":"25","hashOfConfig":"22"},{"size":1649,"mtime":1622012278334,"results":"26","hashOfConfig":"22"},{"size":641,"mtime":1622012278329,"results":"27","hashOfConfig":"22"},{"size":816,"mtime":1610257461747,"results":"28","hashOfConfig":"22"},{"size":1073,"mtime":1610082066659,"results":"29","hashOfConfig":"22"},{"size":1781,"mtime":1622012278330,"results":"30","hashOfConfig":"22"},{"size":939,"mtime":1622012278336,"results":"31","hashOfConfig":"22"},{"size":4013,"mtime":1610081767657,"results":"32","hashOfConfig":"22"},{"size":923,"mtime":1622012278331,"results":"33","hashOfConfig":"22"},{"size":2129,"mtime":1622012278332,"results":"34","hashOfConfig":"22"},{"size":476,"mtime":1622012278335,"results":"35","hashOfConfig":"22"},{"size":1461,"mtime":1622012278335,"results":"36","hashOfConfig":"22"},{"size":648,"mtime":1622012278336,"results":"37","hashOfConfig":"22"},{"size":355,"mtime":1610079865776,"results":"38","hashOfConfig":"22"},{"size":426,"mtime":1610159107533,"results":"39","hashOfConfig":"22"},{"size":232,"mtime":1610169902351,"results":"40","hashOfConfig":"22"},{"size":712,"mtime":1622012278337,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"m7uc1m",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},"/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/SortBubble.jsx",["91"],"const SortBubble = (collection) => {\n  const temp = 0;\n  const sortedItterations = [];\n\n  sortedItterations.push([...collection]);\n  for (var j = 0; j <= collection.length - 2; j++) {\n    for (var i = 0; i <= collection.length - 2; i++) {\n      if (collection[i] > collection[i + 1]) {\n        const temp = collection[i + 1];\n        collection[i + 1] = collection[i];\n        collection[i] = temp;\n        sortedItterations.push([...collection]);\n      }\n    }\n  }\n  return sortedItterations;\n};\n\nexport default SortBubble;\n","/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/Timer.jsx",["92","93"],"import React, { useState, useEffect } from \"react\";\n\nexport const TimerContext = React.createContext(0);\n\nconst Timer = (props) => {\n  const [seconds, setSeconds] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  const { maxItteration } = props;\n\n\n\n  function toggle() {\n    setIsActive(!isActive);\n  }\n\n  function reset() {\n    setSeconds(0);\n    setIsActive(false);\n  }\n\n  useEffect(() => {\n    let interval = null;\n    if (isActive) {\n      interval = setInterval(() => {\n        setSeconds((seconds) => {\n          return seconds + 1;\n        });\n      }, 30);\n      if (seconds == maxItteration - 1) {\n      clearInterval(interval);\n      }\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, seconds]);\n\n  return (\n    <TimerContext.Provider value={seconds}>\n      {props.children}\n      <button\n        className={`button button-primary button-primary-${\n          isActive ? \"active\" : \"inactive\"\n        }`}\n        onClick={toggle}\n      >\n        {isActive ? \"Pause Itteration\" : \"Start Itterating\"}\n      </button>\n      <button className=\"button\" onClick={reset}>\n        Reset\n      </button>\n    </TimerContext.Provider>\n  );\n};\n\nexport default Timer;\n","/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/BubbleSort.jsx",[],"/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/MergeSort.jsx",["94","95"],"// import { Event, event, timers } from \"jquery\";\nimport React, { Component } from \"react\";\nimport SortMerge from \"./SortMerge\";\nimport Graph from \"./Graph\";\nimport Timer, { TimerContext } from \"./Timer\";\nimport DivideGraph from \"./DivideGraph\";\n\nexport class MergeSort extends Component {\n  static displayName = MergeSort.name;\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    inputCollection: [38,1,4,54,8,39,100,34,2,98,101,32,2,84,12,32,7,43,23,7,2,84,32,12,1,33,54,79,4,58,3,87,3,48,9,77,4,98,23,9,32,3,88,87,4,34,7,3,87,3],\n      collection: []\n    };\n  }\n\n  componentDidMount = () => {\n//   this.setState({collection: SortMerge([this.state.inputCollection])});\nthis.state.collection = (SortMerge(this.state.inputCollection));\nconsole.log(this.state.collection);\n\n\n  };\n\n\n  render() {\n    return (\n      <Timer maxItteration={this.state.collection.length}>\n        <TimerContext.Consumer>\n          {(currentItteration) => (\n            <>\n              <h1>Merge Sort</h1>\n              <div className=\"mainText\">\n                <p>\n                  A divide and conquor algorythm.\n                Merge sort is a efficient algorythm which recursively divides a collection into two equal parts, sorting and then merging the sorted parts.\n                <p>\n O(nLogn)\n                  big O \n                </p>\n\n                </p>\n              </div>\n\n              <div className=\"mergeSortContainer\">\n                <DivideGraph data={this.state.collection[currentItteration]}></DivideGraph>\n              </div>\n              <p aria-live=\"polite\">\n                Current itteration: <strong>{currentItteration}</strong>\n              </p>\n            </>\n          )}\n        </TimerContext.Consumer>\n      </Timer>\n\n    );\n  }\n}\n","/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/NavMenu.jsx",[],"/Users/georgia.leng/Desktop/ReactStuff/bigo/src/App.jsx",[],"/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/Graph.jsx",["96"],"import React, { PureComponent } from \"react\";\nimport { setScrollbarWidth } from \"reactstrap/lib/utils\";\nimport BarElement from \"./BarElement\";\nimport ColourFromValue from \"./Colour\";\n\nclass Graph extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { itteration: [] };\n  }\n\n  barChartConstructor = () => {\n    const barElements = [];\n    this.setState({ itteration: this.props.data });\n    const bars = [this.state.itteration];\n\n    bars[0] && bars[0].forEach((element) => {\n      barElements.push(\n        <BarElement value={element} event={this.props.barElementEvent} colour={ColourFromValue(element)} />\n      );\n    });\n    return barElements;\n  };\n\n  render() {\n    return (\n      <div id=\"grid\">\n        {this.barChartConstructor()}\n      </div>\n    );\n  }\n}\n\nexport default Graph;","/Users/georgia.leng/Desktop/ReactStuff/bigo/src/index.js",[],"/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/BigO.jsx",["97","98","99"],"import React, { Component } from \"react\";\nimport { BubbleSort } from \"./BubbleSort\";\nimport { MergeSort } from \"./MergeSort\";\nimport { Link } from \"react-router-dom\";\n\n\nexport class BigO extends Component {\n  static displayName = BigO.name;\n\n  render() {\n    return (\n      <div>\n        <h1>Big O</h1>\n        <p>\n          Big O notation (the order of a function) describes the complexity of a\n          function or algorithm. The order of a function indicates its\n          characteristic rate of growth.\n          <br></br>\n          <br></br>\n          Different algorithms may share the same complexity and be described\n          with the same notation.\n         <br></br> \n          two concret examples here\n\n        </p>\n        <p>For  example,  when  analyzing  some  algorithm,  one  might  find  that  the  time  (or  the number of steps) it takes to complete a problem of size n is given by T(n) = 4 n2 - 2 n + 2. If  we  ignore  constants  (which  makes  sense  because  those  depend  on  the  particular hardware the program is run on) and slower growing terms, we could say \"T(n) grows at the order of n2\" and write:T(n) = O(n2).\n          *(1)  </p>\n        <p>\n          footnotes:\n          <br></br>\n          1) author unavailable, lecture notes, Massachusetts Institute Technology available at: <a href=\"https://web.mit.edu/16.070/www/lecture/big_o.pdf\">here</a>\n\n\n\n           <br></br>\nhttps://www.geeksforgeeks.org/comparison-among-bubble-sort-selection-sort-and-insertion-sort/\n\n{/* <Link to=\"https://web.mit.edu/16.070/www/lecture/big_o.pdf\" target=\"_blank\" onClick={(event) => {event.preventDefault(); window.open(this.makeHref(\"https://web.mit.edu/16.070/www/lecture/big_o.pdf\"));}} /> */}\n\n        </p>\n      </div>\n    );\n  }\n}\nexport default BigO;\n","/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/SortMerge.jsx",[],"/Users/georgia.leng/Desktop/ReactStuff/bigo/src/registerServiceWorker.js",[],"/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/DivideGraph.jsx",["100"],"import React, { PureComponent } from \"react\";\nimport { setScrollbarWidth } from \"reactstrap/lib/utils\";\nimport BarElement from \"./BarElement\";\nimport ColourFromValue from \"./Colour\";\n\nclass DivideGraph extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { itteration: [] };\n  }\n\n  barChartConstructor = () => {\n    const barElements = [];\n    this.setState({ itteration: this.props.data });\n    const bars = [this.state.itteration];\n    // console.log(this.state.itteration + \"itteration\");\n    console.log(this.props.data);\n\n\n    bars[0] && bars[0].forEach((element) => {\n      barElements.push(\n        <BarElement value={element} event={this.props.barElementEvent} colour={ColourFromValue(element)} />\n      );\n    });\n\n\n    return barElements;\n  };\n\n  render() {\n    return (\n      <div id=\"grid\">\n        {this.barChartConstructor()}\n      </div>\n    );\n  }\n}\n\nexport default DivideGraph;","/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/InsertionSort.jsx",[],"/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/SortInsertion.jsx",[],"/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/SelectionSort.jsx",[],"/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/SortSelection.jsx",["101"],"const SortSelection = (collection) => {\n  let temp = 0;\n  const sortedItterations = [];\n  const n = collection.length;\n  for (let i = 0; i < n - 1; i++) {\n    sortedItterations.push([...collection]);\n    // Find the minimum element in unsorted array\n    let min_idx = i;\n    for (let j = i + 1; j < n; j++)\n      if (collection[j] < collection[min_idx]) min_idx = j;\n\n    // Swap the found minimum element with the first\n    // element\n  let temp = collection[min_idx];\n    collection[min_idx] = collection[i];\n    collection[i] = temp;\n  sortedItterations.push([...collection]);\n\n  }\n\n  return sortedItterations;\n};\n\nexport default SortSelection;\n","/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/Layout.jsx",[],"/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/BarElement.jsx",["102","103"],"\nimport React, { useState } from \"react\";\n\nconst BarElement = (props) => {\n  const [colour, setColour] = useState(props.colour);\n  const { value } = props;\n\n  return (\n    <div\n      style={{\n        height: props.value * 2,\n        backgroundSize: \"150px\",\n        backgroundColor: props.colour\n      }}\n      onClick={props.event}\n      id={value}\n      className=\"barElement\"\n    ></div>\n  );\n};\n\nexport default BarElement;","/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/Colour.jsx",[],"/Users/georgia.leng/Desktop/ReactStuff/bigo/src/components/SortingAlgorithms.jsx",["104"],"import React, { Component } from 'react';\nimport { BubbleSort } from './BubbleSort';\nimport { InsertionSort } from './InsertionSort';\nimport { MergeSort } from './MergeSort';\nimport { SelectionSort } from './SelectionSort';\n\nexport class SortingAlgorithms extends Component {\n  static displayName = SortingAlgorithms.name;\n\n  render () {\n    return (\n      <div>\n        <h1>Sorting Algorithms</h1>\n        <p>Here you can see the different performance of algorithms sorting the same collection</p>\n        <BubbleSort></BubbleSort>\n        {/* <MergeSort></MergeSort> */}\n        <InsertionSort></InsertionSort>\n        <SelectionSort></SelectionSort>\n      </div>\n    );\n  }\n}\nexport default SortingAlgorithms;",{"ruleId":"105","severity":1,"message":"106","line":2,"column":9,"nodeType":"107","messageId":"108","endLine":2,"endColumn":13},{"ruleId":"109","severity":1,"message":"110","line":29,"column":19,"nodeType":"111","messageId":"112","endLine":29,"endColumn":21},{"ruleId":"113","severity":1,"message":"114","line":36,"column":6,"nodeType":"115","endLine":36,"endColumn":25,"suggestions":"116"},{"ruleId":"105","severity":1,"message":"117","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":13},{"ruleId":"118","severity":1,"message":"119","line":21,"column":1,"nodeType":"120","messageId":"121","endLine":21,"endColumn":11},{"ruleId":"105","severity":1,"message":"122","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":27},{"ruleId":"105","severity":1,"message":"123","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":20},{"ruleId":"105","severity":1,"message":"124","line":3,"column":10,"nodeType":"107","messageId":"108","endLine":3,"endColumn":19},{"ruleId":"105","severity":1,"message":"125","line":4,"column":10,"nodeType":"107","messageId":"108","endLine":4,"endColumn":14},{"ruleId":"105","severity":1,"message":"122","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":27},{"ruleId":"105","severity":1,"message":"106","line":2,"column":7,"nodeType":"107","messageId":"108","endLine":2,"endColumn":11},{"ruleId":"105","severity":1,"message":"126","line":5,"column":10,"nodeType":"107","messageId":"108","endLine":5,"endColumn":16},{"ruleId":"105","severity":1,"message":"127","line":5,"column":18,"nodeType":"107","messageId":"108","endLine":5,"endColumn":27},{"ruleId":"105","severity":1,"message":"124","line":4,"column":10,"nodeType":"107","messageId":"108","endLine":4,"endColumn":19},"no-unused-vars","'temp' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'maxItteration'. Either include it or remove the dependency array.","ArrayExpression",["128"],"'Graph' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","'setScrollbarWidth' is defined but never used.","'BubbleSort' is defined but never used.","'MergeSort' is defined but never used.","'Link' is defined but never used.","'colour' is assigned a value but never used.","'setColour' is assigned a value but never used.",{"desc":"129","fix":"130"},"Update the dependencies array to be: [isActive, maxItteration, seconds]",{"range":"131","text":"132"},[793,812],"[isActive, maxItteration, seconds]"]